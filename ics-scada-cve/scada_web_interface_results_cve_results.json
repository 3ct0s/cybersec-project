[
    {
        "IP": "37.252.120.35",
        "Port": 443,
        "CVE": "CVE-2019-0220",
        "Summary": "A vulnerability was found in Apache HTTP Server 2.4.0 to 2.4.38. When the path component of a request URL contains multiple consecutive slashes ('/'), directives such as LocationMatch and RewriteRule must account for duplicates in regular expressions while other aspects of the servers processing will implicitly collapse them."
    },
    {
        "IP": "37.252.120.35",
        "Port": 443,
        "CVE": "CVE-2024-27316",
        "Summary": "HTTP/2 incoming headers exceeding the limit are temporarily buffered in nghttp2 in order to generate an informative HTTP 413 response. If a client does not stop sending headers, this leads to memory exhaustion."
    },
    {
        "IP": "37.252.120.35",
        "Port": 443,
        "CVE": "CVE-2011-2688",
        "Summary": "SQL injection vulnerability in mysql/mysql-auth.pl in the mod_authnz_external module 3.2.5 and earlier for the Apache HTTP Server allows remote attackers to execute arbitrary SQL commands via the user field."
    },
    {
        "IP": "37.252.120.35",
        "Port": 443,
        "CVE": "CVE-2013-2765",
        "Summary": "The ModSecurity module before 2.7.4 for the Apache HTTP Server allows remote attackers to cause a denial of service (NULL pointer dereference, process crash, and disk consumption) via a POST request with a large body and a crafted Content-Type header."
    },
    {
        "IP": "37.252.120.35",
        "Port": 443,
        "CVE": "CVE-2020-1934",
        "Summary": "In Apache HTTP Server 2.4.0 to 2.4.41, mod_proxy_ftp may use uninitialized memory when proxying to a malicious FTP server."
    },
    {
        "IP": "37.252.120.35",
        "Port": 443,
        "CVE": "CVE-2018-17189",
        "Summary": "In Apache HTTP server versions 2.4.37 and prior, by sending request bodies in a slow loris way to plain resources, the h2 stream for that request unnecessarily occupied a server thread cleaning up that incoming data. This affects only HTTP/2 (mod_http2) connections."
    },
    {
        "IP": "37.252.120.35",
        "Port": 443,
        "CVE": "CVE-2022-36760",
        "Summary": "Inconsistent Interpretation of HTTP Requests ('HTTP Request Smuggling') vulnerability in mod_proxy_ajp of Apache HTTP Server allows an attacker to smuggle requests to the AJP server it forwards requests to.  This issue affects Apache HTTP Server Apache HTTP Server 2.4 version 2.4.54 and prior versions."
    },
    {
        "IP": "37.252.120.35",
        "Port": 443,
        "CVE": "CVE-2020-35452",
        "Summary": "Apache HTTP Server versions 2.4.0 to 2.4.46 A specially crafted Digest nonce can cause a stack overflow in mod_auth_digest. There is no report of this overflow being exploitable, nor the Apache HTTP Server team could create one, though some particular compiler and/or compilation option might make it possible, with limited consequences anyway due to the size (a single byte) and the value (zero byte) of the overflow"
    },
    {
        "IP": "37.252.120.35",
        "Port": 443,
        "CVE": "CVE-2022-29404",
        "Summary": "In Apache HTTP Server 2.4.53 and earlier, a malicious request to a lua script that calls r:parsebody(0) may cause a denial of service due to no default limit on possible input size."
    },
    {
        "IP": "37.252.120.35",
        "Port": 443,
        "CVE": "CVE-2021-33193",
        "Summary": "A crafted method sent through HTTP/2 will bypass validation and be forwarded by mod_proxy, which can lead to request splitting or cache poisoning. This issue affects Apache HTTP Server 2.4.17 to 2.4.48."
    },
    {
        "IP": "37.252.120.35",
        "Port": 443,
        "CVE": "CVE-2009-0796",
        "Summary": "Cross-site scripting (XSS) vulnerability in Status.pm in Apache::Status and Apache2::Status in mod_perl1 and mod_perl2 for the Apache HTTP Server, when /perl-status is accessible, allows remote attackers to inject arbitrary web script or HTML via the URI."
    },
    {
        "IP": "37.252.120.35",
        "Port": 443,
        "CVE": "CVE-2013-4365",
        "Summary": "Heap-based buffer overflow in the fcgid_header_bucket_read function in fcgid_bucket.c in the mod_fcgid module before 2.3.9 for the Apache HTTP Server allows remote attackers to have an unspecified impact via unknown vectors."
    },
    {
        "IP": "37.252.120.35",
        "Port": 443,
        "CVE": "CVE-2018-1333",
        "Summary": "By specially crafting HTTP/2 requests, workers would be allocated 60 seconds longer than necessary, leading to worker exhaustion and a denial of service. Fixed in Apache HTTP Server 2.4.34 (Affected 2.4.18-2.4.30,2.4.33)."
    },
    {
        "IP": "37.252.120.35",
        "Port": 443,
        "CVE": "CVE-2022-22720",
        "Summary": "Apache HTTP Server 2.4.52 and earlier fails to close inbound connection when errors are encountered discarding the request body, exposing the server to HTTP Request Smuggling"
    },
    {
        "IP": "37.252.120.35",
        "Port": 443,
        "CVE": "CVE-2018-11763",
        "Summary": "In Apache HTTP Server 2.4.17 to 2.4.34, by sending continuous, large SETTINGS frames a client can occupy a connection, server thread and CPU time without any connection timeout coming to effect. This affects only HTTP/2 connections. A possible mitigation is to not enable the h2 protocol."
    },
    {
        "IP": "37.252.120.35",
        "Port": 443,
        "CVE": "CVE-2022-28330",
        "Summary": "Apache HTTP Server 2.4.53 and earlier on Windows may read beyond bounds when configured to process requests with the mod_isapi module."
    },
    {
        "IP": "37.252.120.35",
        "Port": 443,
        "CVE": "CVE-2020-11993",
        "Summary": "Apache HTTP Server versions 2.4.20 to 2.4.43 When trace/debug was enabled for the HTTP/2 module and on certain traffic edge patterns, logging statements were made on the wrong connection, causing concurrent use of memory pools. Configuring the LogLevel of mod_http2 above \"info\" will mitigate this vulnerability for unpatched servers."
    },
    {
        "IP": "37.252.120.35",
        "Port": 443,
        "CVE": "CVE-2021-32791",
        "Summary": "mod_auth_openidc is an authentication/authorization module for the Apache 2.x HTTP server that functions as an OpenID Connect Relying Party, authenticating users against an OpenID Connect Provider. In mod_auth_openidc before version 2.4.9, the AES GCM encryption in mod_auth_openidc uses a static IV and AAD. It is important to fix because this creates a static nonce and since aes-gcm is a stream cipher, this can lead to known cryptographic issues, since the same key is being reused. From 2.4.9 onwards this has been patched to use dynamic values through usage of cjose AES encryption routines."
    },
    {
        "IP": "37.252.120.35",
        "Port": 443,
        "CVE": "CVE-2021-32792",
        "Summary": "mod_auth_openidc is an authentication/authorization module for the Apache 2.x HTTP server that functions as an OpenID Connect Relying Party, authenticating users against an OpenID Connect Provider. In mod_auth_openidc before version 2.4.9, there is an XSS vulnerability in when using `OIDCPreservePost On`."
    },
    {
        "IP": "37.252.120.35",
        "Port": 443,
        "CVE": "CVE-2023-31122",
        "Summary": "Out-of-bounds Read vulnerability in mod_macro of Apache HTTP Server.This issue affects Apache HTTP Server: through 2.4.57.\n\n"
    },
    {
        "IP": "37.252.120.35",
        "Port": 443,
        "CVE": "CVE-2019-9517",
        "Summary": "Some HTTP/2 implementations are vulnerable to unconstrained interal data buffering, potentially leading to a denial of service. The attacker opens the HTTP/2 window so the peer can send without constraint; however, they leave the TCP window closed so the peer cannot actually write (many of) the bytes on the wire. The attacker then sends a stream of requests for a large response object. Depending on how the servers queue the responses, this can consume excess memory, CPU, or both."
    },
    {
        "IP": "37.252.120.35",
        "Port": 443,
        "CVE": "CVE-2024-38476",
        "Summary": "Vulnerability in core of Apache HTTP Server 2.4.59 and earlier are vulnerably to information disclosure, SSRF or local script execution via\u00a0backend applications whose response headers are malicious or exploitable.\n\nUsers are recommended to upgrade to version 2.4.60, which fixes this issue."
    },
    {
        "IP": "37.252.120.35",
        "Port": 443,
        "CVE": "CVE-2024-38477",
        "Summary": "null pointer dereference in mod_proxy in Apache HTTP Server 2.4.59 and earlier allows an attacker to crash the server via a malicious request.\nUsers are recommended to upgrade to version 2.4.60, which fixes this issue."
    },
    {
        "IP": "37.252.120.35",
        "Port": 443,
        "CVE": "CVE-2024-38474",
        "Summary": "Substitution encoding issue in mod_rewrite in Apache HTTP Server 2.4.59 and earlier allows attacker to execute scripts in\ndirectories permitted by the configuration but not directly reachable by any\u00a0URL or source disclosure of scripts meant to only to be executed as CGI.\n\nUsers are recommended to upgrade to version 2.4.60, which fixes this issue.\n\nSome RewriteRules that capture and substitute unsafely will now fail unless rewrite flag \"UnsafeAllow3F\" is specified."
    },
    {
        "IP": "37.252.120.35",
        "Port": 443,
        "CVE": "CVE-2019-0196",
        "Summary": "A vulnerability was found in Apache HTTP Server 2.4.17 to 2.4.38. Using fuzzed network input, the http/2 request handling could be made to access freed memory in string comparison when determining the method of a request and thus process the request incorrectly."
    },
    {
        "IP": "37.252.120.35",
        "Port": 443,
        "CVE": "CVE-2019-0211",
        "Summary": "In Apache HTTP Server 2.4 releases 2.4.17 to 2.4.38, with MPM event, worker or prefork, code executing in less-privileged child processes or threads (including scripts executed by an in-process scripting interpreter) could execute arbitrary code with the privileges of the parent process (usually root) by manipulating the scoreboard. Non-Unix systems are not affected."
    },
    {
        "IP": "37.252.120.35",
        "Port": 443,
        "CVE": "CVE-2022-22721",
        "Summary": "If LimitXMLRequestBody is set to allow request bodies larger than 350MB (defaults to 1M) on 32 bit systems an integer overflow happens which later causes out of bounds writes. This issue affects Apache HTTP Server 2.4.52 and earlier."
    },
    {
        "IP": "37.252.120.35",
        "Port": 443,
        "CVE": "CVE-2006-20001",
        "Summary": "A carefully crafted If: request header can cause a memory read, or write of a single zero byte, in a pool (heap) memory location beyond the header value sent. This could cause the process to crash.\n\nThis issue affects Apache HTTP Server 2.4.54 and earlier.\n"
    },
    {
        "IP": "37.252.120.35",
        "Port": 443,
        "CVE": "CVE-2019-10092",
        "Summary": "In Apache HTTP Server 2.4.0-2.4.39, a limited cross-site scripting issue was reported affecting the mod_proxy error page. An attacker could cause the link on the error page to be malformed and instead point to a page of their choice. This would only be exploitable where a server was set up with proxying enabled but was misconfigured in such a way that the Proxy Error page was displayed."
    },
    {
        "IP": "37.252.120.35",
        "Port": 443,
        "CVE": "CVE-2013-0941",
        "Summary": "EMC RSA Authentication API before 8.1 SP1, RSA Web Agent before 5.3.5 for Apache Web Server, RSA Web Agent before 5.3.5 for IIS, RSA PAM Agent before 7.0, and RSA Agent before 6.1.4 for Microsoft Windows use an improper encryption algorithm and a weak key for maintaining the stored data of the node secret for the SecurID Authentication API, which allows local users to obtain sensitive information via cryptographic attacks on this data."
    },
    {
        "IP": "37.252.120.35",
        "Port": 443,
        "CVE": "CVE-2019-17567",
        "Summary": "Apache HTTP Server versions 2.4.6 to 2.4.46 mod_proxy_wstunnel configured on an URL that is not necessarily Upgraded by the origin server was tunneling the whole connection regardless, thus allowing for subsequent requests on the same connection to pass through with no HTTP validation, authentication or authorization possibly configured."
    },
    {
        "IP": "37.252.120.35",
        "Port": 443,
        "CVE": "CVE-2017-15715",
        "Summary": "In Apache httpd 2.4.0 to 2.4.29, the expression specified in <FilesMatch> could match '$' to a newline character in a malicious filename, rather than matching only the end of the filename. This could be exploited in environments where uploads of some files are are externally blocked, but only by matching the trailing portion of the filename."
    },
    {
        "IP": "37.252.120.35",
        "Port": 443,
        "CVE": "CVE-2022-31813",
        "Summary": "Apache HTTP Server 2.4.53 and earlier may not send the X-Forwarded-* headers to the origin server based on client side Connection header hop-by-hop mechanism. This may be used to bypass IP based authentication on the origin server/application."
    },
    {
        "IP": "37.252.120.35",
        "Port": 443,
        "CVE": "CVE-2012-4001",
        "Summary": "The mod_pagespeed module before 0.10.22.6 for the Apache HTTP Server does not properly verify its host name, which allows remote attackers to trigger HTTP requests to arbitrary hosts via unspecified vectors, as demonstrated by requests to intranet servers."
    },
    {
        "IP": "37.252.120.35",
        "Port": 443,
        "CVE": "CVE-2019-10098",
        "Summary": "In Apache HTTP server 2.4.0 to 2.4.39, Redirects configured with mod_rewrite that were intended to be self-referential might be fooled by encoded newlines and redirect instead to an unexpected URL within the request URL."
    },
    {
        "IP": "37.252.120.35",
        "Port": 443,
        "CVE": "CVE-2022-37436",
        "Summary": "Prior to Apache HTTP Server 2.4.55, a malicious backend can cause the response headers to be truncated early, resulting in some headers being incorporated into the response body. If the later headers have any security purpose, they will not be interpreted by the client."
    },
    {
        "IP": "37.252.120.35",
        "Port": 443,
        "CVE": "CVE-2012-4360",
        "Summary": "Cross-site scripting (XSS) vulnerability in the mod_pagespeed module 0.10.19.1 through 0.10.22.4 for the Apache HTTP Server allows remote attackers to inject arbitrary web script or HTML via unspecified vectors."
    },
    {
        "IP": "37.252.120.35",
        "Port": 443,
        "CVE": "CVE-2021-40438",
        "Summary": "A crafted request uri-path can cause mod_proxy to forward the request to an origin server choosen by the remote user. This issue affects Apache HTTP Server 2.4.48 and earlier."
    },
    {
        "IP": "37.252.120.35",
        "Port": 443,
        "CVE": "CVE-2011-1176",
        "Summary": "The configuration merger in itk.c in the Steinar H. Gunderson mpm-itk Multi-Processing Module 2.2.11-01 and 2.2.11-02 for the Apache HTTP Server does not properly handle certain configuration sections that specify NiceValue but not AssignUserID, which might allow remote attackers to gain privileges by leveraging the root uid and root gid of an mpm-itk process."
    },
    {
        "IP": "37.252.120.35",
        "Port": 443,
        "CVE": "CVE-2022-23943",
        "Summary": "Out-of-bounds Write vulnerability in mod_sed of Apache HTTP Server allows an attacker to overwrite heap memory with possibly attacker provided data. This issue affects Apache HTTP Server 2.4 version 2.4.52 and prior versions."
    },
    {
        "IP": "37.252.120.35",
        "Port": 443,
        "CVE": "CVE-2020-1927",
        "Summary": "In Apache HTTP Server 2.4.0 to 2.4.41, redirects configured with mod_rewrite that were intended to be self-referential might be fooled by encoded newlines and redirect instead to an an unexpected URL within the request URL."
    },
    {
        "IP": "37.252.120.35",
        "Port": 443,
        "CVE": "CVE-2018-17199",
        "Summary": "In Apache HTTP Server 2.4 release 2.4.37 and prior, mod_session checks the session expiry time before decoding the session. This causes session expiry time to be ignored for mod_session_cookie sessions since the expiry time is loaded when the session is decoded."
    },
    {
        "IP": "37.252.120.35",
        "Port": 443,
        "CVE": "CVE-2017-15710",
        "Summary": "In Apache httpd 2.0.23 to 2.0.65, 2.2.0 to 2.2.34, and 2.4.0 to 2.4.29, mod_authnz_ldap, if configured with AuthLDAPCharsetConfig, uses the Accept-Language header value to lookup the right charset encoding when verifying the user's credentials. If the header value is not present in the charset conversion table, a fallback mechanism is used to truncate it to a two characters value to allow a quick retry (for example, 'en-US' is truncated to 'en'). A header value of less than two characters forces an out of bound write of one NUL byte to a memory location that is not part of the string. In the worst case, quite unlikely, the process would crash which could be used as a Denial of Service attack. In the more likely case, this memory is already reserved for future use and the issue has no effect at all."
    },
    {
        "IP": "37.252.120.35",
        "Port": 443,
        "CVE": "CVE-2018-1301",
        "Summary": "A specially crafted request could have crashed the Apache HTTP Server prior to version 2.4.30, due to an out of bound access after a size limit is reached by reading the HTTP header. This vulnerability is considered very hard if not impossible to trigger in non-debug mode (both log and build level), so it is classified as low risk for common server usage."
    },
    {
        "IP": "37.252.120.35",
        "Port": 443,
        "CVE": "CVE-2018-1302",
        "Summary": "When an HTTP/2 stream was destroyed after being handled, the Apache HTTP Server prior to version 2.4.30 could have written a NULL pointer potentially to an already freed memory. The memory pools maintained by the server make this vulnerability hard to trigger in usual configurations, the reporter and the team could not reproduce it outside debug builds, so it is classified as low risk."
    },
    {
        "IP": "37.252.120.35",
        "Port": 443,
        "CVE": "CVE-2018-1303",
        "Summary": "A specially crafted HTTP request header could have crashed the Apache HTTP Server prior to version 2.4.30 due to an out of bound read while preparing data to be cached in shared memory. It could be used as a Denial of Service attack against users of mod_cache_socache. The vulnerability is considered as low risk since mod_cache_socache is not widely used, mod_cache_disk is not concerned by this vulnerability."
    },
    {
        "IP": "37.252.120.35",
        "Port": 443,
        "CVE": "CVE-2021-34798",
        "Summary": "Malformed requests may cause the server to dereference a NULL pointer. This issue affects Apache HTTP Server 2.4.48 and earlier."
    },
    {
        "IP": "37.252.120.35",
        "Port": 443,
        "CVE": "CVE-2023-25690",
        "Summary": "Some mod_proxy configurations on Apache HTTP Server versions 2.4.0 through 2.4.55 allow a HTTP Request Smuggling attack.\n\n\n\n\nConfigurations are affected when mod_proxy is enabled along with some form of RewriteRule\n or ProxyPassMatch in which a non-specific pattern matches\n some portion of the user-supplied request-target (URL) data and is then\n re-inserted into the proxied request-target using variable \nsubstitution. For example, something like:\n\n\n\n\nRewriteEngine on\nRewriteRule \"^/here/(.*)\" \"http://example.com:8080/elsewhere?$1\"; [P]\nProxyPassReverse /here/ http://example.com:8080/\n\n\nRequest splitting/smuggling could result in bypass of access controls in the proxy server, proxying unintended URLs to existing origin servers, and cache poisoning. Users are recommended to update to at least version 2.4.56 of Apache HTTP Server.\n\n\n"
    },
    {
        "IP": "37.252.120.35",
        "Port": 443,
        "CVE": "CVE-2021-32786",
        "Summary": "mod_auth_openidc is an authentication/authorization module for the Apache 2.x HTTP server that functions as an OpenID Connect Relying Party, authenticating users against an OpenID Connect Provider. In versions prior to 2.4.9, `oidc_validate_redirect_url()` does not parse URLs the same way as most browsers do. As a result, this function can be bypassed and leads to an Open Redirect vulnerability in the logout functionality. This bug has been fixed in version 2.4.9 by replacing any backslash of the URL to redirect with slashes to address a particular breaking change between the different specifications (RFC2396 / RFC3986 and WHATWG). As a workaround, this vulnerability can be mitigated by configuring `mod_auth_openidc` to only allow redirection whose destination matches a given regular expression."
    },
    {
        "IP": "37.252.120.35",
        "Port": 443,
        "CVE": "CVE-2021-32785",
        "Summary": "mod_auth_openidc is an authentication/authorization module for the Apache 2.x HTTP server that functions as an OpenID Connect Relying Party, authenticating users against an OpenID Connect Provider. When mod_auth_openidc versions prior to 2.4.9 are configured to use an unencrypted Redis cache (`OIDCCacheEncrypt off`, `OIDCSessionType server-cache`, `OIDCCacheType redis`), `mod_auth_openidc` wrongly performed argument interpolation before passing Redis requests to `hiredis`, which would perform it again and lead to an uncontrolled format string bug. Initial assessment shows that this bug does not appear to allow gaining arbitrary code execution, but can reliably provoke a denial of service by repeatedly crashing the Apache workers. This bug has been corrected in version 2.4.9 by performing argument interpolation only once, using the `hiredis` API. As a workaround, this vulnerability can be mitigated by setting `OIDCCacheEncrypt` to `on`, as cache keys are cryptographically hashed before use when this option is enabled."
    },
    {
        "IP": "37.252.120.35",
        "Port": 443,
        "CVE": "CVE-2020-9490",
        "Summary": "Apache HTTP Server versions 2.4.20 to 2.4.43. A specially crafted value for the 'Cache-Digest' header in a HTTP/2 request would result in a crash when the server actually tries to HTTP/2 PUSH a resource afterwards. Configuring the HTTP/2 feature via \"H2Push off\" will mitigate this vulnerability for unpatched servers."
    },
    {
        "IP": "37.252.120.35",
        "Port": 443,
        "CVE": "CVE-2021-44224",
        "Summary": "A crafted URI sent to httpd configured as a forward proxy (ProxyRequests on) can cause a crash (NULL pointer dereference) or, for configurations mixing forward and reverse proxy declarations, can allow for requests to be directed to a declared Unix Domain Socket endpoint (Server Side Request Forgery). This issue affects Apache HTTP Server 2.4.7 up to 2.4.51 (included)."
    },
    {
        "IP": "37.252.120.35",
        "Port": 443,
        "CVE": "CVE-2007-4723",
        "Summary": "Directory traversal vulnerability in Ragnarok Online Control Panel 4.3.4a, when the Apache HTTP Server is used, allows remote attackers to bypass authentication via directory traversal sequences in a URI that ends with the name of a publicly available page, as demonstrated by a \"/...../\" sequence and an account_manage.php/login.php final component for reaching the protected account_manage.php page."
    },
    {
        "IP": "37.252.120.35",
        "Port": 443,
        "CVE": "CVE-2021-44790",
        "Summary": "A carefully crafted request body can cause a buffer overflow in the mod_lua multipart parser (r:parsebody() called from Lua scripts). The Apache httpd team is not aware of an exploit for the vulnerabilty though it might be possible to craft one. This issue affects Apache HTTP Server 2.4.51 and earlier."
    },
    {
        "IP": "37.252.120.35",
        "Port": 443,
        "CVE": "CVE-2013-0942",
        "Summary": "Cross-site scripting (XSS) vulnerability in EMC RSA Authentication Agent 7.1 before 7.1.1 for Web for Internet Information Services, and 7.1 before 7.1.1 for Web for Apache, allows remote attackers to inject arbitrary web script or HTML via unspecified vectors."
    },
    {
        "IP": "37.252.120.35",
        "Port": 443,
        "CVE": "CVE-2021-26690",
        "Summary": "Apache HTTP Server versions 2.4.0 to 2.4.46 A specially crafted Cookie header handled by mod_session can cause a NULL pointer dereference and crash, leading to a possible Denial Of Service"
    },
    {
        "IP": "37.252.120.35",
        "Port": 443,
        "CVE": "CVE-2021-26691",
        "Summary": "In Apache HTTP Server versions 2.4.0 to 2.4.46 a specially crafted SessionHeader sent by an origin server could cause a heap overflow"
    },
    {
        "IP": "37.252.120.35",
        "Port": 443,
        "CVE": "CVE-2022-26377",
        "Summary": "Inconsistent Interpretation of HTTP Requests ('HTTP Request Smuggling') vulnerability in mod_proxy_ajp of Apache HTTP Server allows an attacker to smuggle requests to the AJP server it forwards requests to. This issue affects Apache HTTP Server Apache HTTP Server 2.4 version 2.4.53 and prior versions."
    },
    {
        "IP": "37.252.120.35",
        "Port": 443,
        "CVE": "CVE-2023-45802",
        "Summary": "When a HTTP/2 stream was reset (RST frame) by a client, there was a time window were the request's memory resources were not reclaimed immediately. Instead, de-allocation was deferred to connection close. A client could send new requests and resets, keeping the connection busy and open and causing the memory footprint to keep on growing. On connection close, all resources were reclaimed, but the process might run out of memory before that.\n\nThis was found by the reporter during testing of\u00a0CVE-2023-44487 (HTTP/2 Rapid Reset Exploit) with their own test client. During \"normal\" HTTP/2 use, the probability to hit this bug is very low. The kept memory would not become noticeable before the connection closes or times out.\n\nUsers are recommended to upgrade to version 2.4.58, which fixes the issue."
    },
    {
        "IP": "37.252.120.35",
        "Port": 443,
        "CVE": "CVE-2022-28614",
        "Summary": "The ap_rwrite() function in Apache HTTP Server 2.4.53 and earlier may read unintended memory if an attacker can cause the server to reflect very large input using ap_rwrite() or ap_rputs(), such as with mod_luas r:puts() function. Modules compiled and distributed separately from Apache HTTP Server that use the 'ap_rputs' function and may pass it a very large (INT_MAX or larger) string must be compiled against current headers to resolve the issue."
    },
    {
        "IP": "37.252.120.35",
        "Port": 443,
        "CVE": "CVE-2020-13938",
        "Summary": "Apache HTTP Server versions 2.4.0 to 2.4.46 Unprivileged local users can stop httpd on Windows"
    },
    {
        "IP": "37.252.120.35",
        "Port": 443,
        "CVE": "CVE-2019-10081",
        "Summary": "HTTP/2 (2.4.20 through 2.4.39) very early pushes, for example configured with \"H2PushResource\", could lead to an overwrite of memory in the pushing request's pool, leading to crashes. The memory copied is that of the configured push link header values, not data supplied by the client."
    },
    {
        "IP": "37.252.120.35",
        "Port": 443,
        "CVE": "CVE-2018-1283",
        "Summary": "In Apache httpd 2.4.0 to 2.4.29, when mod_session is configured to forward its session data to CGI applications (SessionEnv on, not the default), a remote user may influence their content by using a \"Session\" header. This comes from the \"HTTP_SESSION\" variable name used by mod_session to forward its data to CGIs, since the prefix \"HTTP_\" is also used by the Apache HTTP Server to pass HTTP header fields, per CGI specifications."
    },
    {
        "IP": "37.252.120.35",
        "Port": 443,
        "CVE": "CVE-2019-10082",
        "Summary": "In Apache HTTP Server 2.4.18-2.4.39, using fuzzed network input, the http/2 session handling could be made to read memory after being freed, during connection shutdown."
    },
    {
        "IP": "37.252.120.35",
        "Port": 443,
        "CVE": "CVE-2018-1312",
        "Summary": "In Apache httpd 2.2.0 to 2.4.29, when generating an HTTP Digest authentication challenge, the nonce sent to prevent reply attacks was not correctly generated using a pseudo-random seed. In a cluster of servers using a common Digest authentication configuration, HTTP requests could be replayed across servers by an attacker without detection."
    },
    {
        "IP": "37.252.120.35",
        "Port": 443,
        "CVE": "CVE-2012-3526",
        "Summary": "The reverse proxy add forward module (mod_rpaf) 0.5 and 0.6 for the Apache HTTP Server allows remote attackers to cause a denial of service (server or application crash) via multiple X-Forwarded-For headers in a request."
    },
    {
        "IP": "37.252.120.35",
        "Port": 443,
        "CVE": "CVE-2024-40898",
        "Summary": "SSRF in Apache HTTP Server on Windows with mod_rewrite in server/vhost context, allows to potentially leak NTML hashes to a malicious server via SSRF and malicious requests.\n\nUsers are recommended to upgrade to version 2.4.62 which fixes this issue.\u00a0"
    },
    {
        "IP": "37.252.120.35",
        "Port": 443,
        "CVE": "CVE-2019-0217",
        "Summary": "In Apache HTTP Server 2.4 release 2.4.38 and prior, a race condition in mod_auth_digest when running in a threaded server could allow a user with valid credentials to authenticate using another username, bypassing configured access control restrictions."
    },
    {
        "IP": "37.252.120.35",
        "Port": 443,
        "CVE": "CVE-2009-2299",
        "Summary": "The Artofdefence Hyperguard Web Application Firewall (WAF) module before 2.5.5-11635, 3.0 before 3.0.3-11636, and 3.1 before 3.1.1-11637, a module for the Apache HTTP Server, allows remote attackers to cause a denial of service (memory consumption) via an HTTP request with a large Content-Length value but no POST data."
    },
    {
        "IP": "37.252.120.35",
        "Port": 443,
        "CVE": "CVE-2021-39275",
        "Summary": "ap_escape_quotes() may write beyond the end of a buffer when given malicious input. No included modules pass untrusted data to these functions, but third-party / external modules may. This issue affects Apache HTTP Server 2.4.48 and earlier."
    },
    {
        "IP": "37.252.120.35",
        "Port": 443,
        "CVE": "CVE-2022-28615",
        "Summary": "Apache HTTP Server 2.4.53 and earlier may crash or disclose information due to a read beyond bounds in ap_strcmp_match() when provided with an extremely large input buffer. While no code distributed with the server can be coerced into such a call, third-party modules or lua scripts that use ap_strcmp_match() may hypothetically be affected."
    },
    {
        "IP": "37.252.120.35",
        "Port": 443,
        "CVE": "CVE-2022-30556",
        "Summary": "Apache HTTP Server 2.4.53 and earlier may return lengths to applications calling r:wsread() that point past the end of the storage allocated for the buffer."
    },
    {
        "IP": "37.252.120.35",
        "Port": 443,
        "CVE": "CVE-2022-22719",
        "Summary": "A carefully crafted request body can cause a read to a random memory area which could cause the process to crash. This issue affects Apache HTTP Server 2.4.52 and earlier."
    },
    {
        "IP": "23.97.174.97",
        "Port": 443,
        "CVE": "CVE-2023-44487",
        "Summary": "The HTTP/2 protocol allows a denial of service (server resource consumption) because request cancellation can reset many streams quickly, as exploited in the wild in August through October 2023."
    },
    {
        "IP": "23.97.174.97",
        "Port": 443,
        "CVE": "CVE-2021-23017",
        "Summary": "A security issue in nginx resolver was identified, which might allow an attacker who is able to forge UDP packets from the DNS server to cause 1-byte memory overwrite, resulting in worker process crash or potential other impact."
    },
    {
        "IP": "23.97.174.97",
        "Port": 443,
        "CVE": "CVE-2021-3618",
        "Summary": "ALPACA is an application layer protocol content confusion attack, exploiting TLS servers implementing different protocols but using compatible certificates, such as multi-domain or wildcard certificates. A MiTM attacker having access to victim's traffic at the TCP/IP layer can redirect traffic from one subdomain to another, resulting in a valid TLS session. This breaks the authentication of TLS and cross-protocol attacks may be possible where the behavior of one protocol service may compromise the other at the application layer."
    }
]